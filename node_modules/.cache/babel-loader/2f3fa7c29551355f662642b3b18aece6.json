{"ast":null,"code":"import _defineProperty from \"/home/codebrahma/Documents/Projects/messages/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AUTH_SUCCESS, AUTH_FAIL, UPDATE_MESSAGES, REGISTER, LOADING } from \"../actions/actions\";\nimport { CANCEL } from \"redux-saga\";\nconst INITIAL_STATE = {\n  loading: false,\n  isLogged: false,\n  data: {\n    name: \"\",\n    id: \"\"\n  },\n  loginStatus: \"\"\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        loading: false,\n        isLogged: true,\n        data: action.data,\n        loginStatus: \"success\"\n      };\n\n    case AUTH_FAIL:\n      console.log(\"Auth_fai\");\n      return {\n        isLogged: false,\n        data: {},\n        loginStatus: \"error\"\n      };\n\n    case UPDATE_MESSAGES:\n      return _objectSpread({}, state, {\n        data: action.data,\n        loginStatus: \"success\"\n      });\n\n    case LOADING:\n      return {\n        loading: true\n      };\n    // case REGISTERED:\n    //   console.log(\"Registered success\");\n    //   break;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/home/codebrahma/Documents/Projects/messages/src/reducers/authReducer.js"],"names":["AUTH_SUCCESS","AUTH_FAIL","UPDATE_MESSAGES","REGISTER","LOADING","CANCEL","INITIAL_STATE","loading","isLogged","data","name","id","loginStatus","authReducer","state","action","type","console","log"],"mappings":";;;;;;AAAA,SACEA,YADF,EAEEC,SAFF,EAGEC,eAHF,EAIEC,QAJF,EAKEC,OALF,QAMO,oBANP;AAOA,SAASC,MAAT,QAAuB,YAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,KADW;AAEpBC,EAAAA,QAAQ,EAAE,KAFU;AAGpBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,EADF;AAEJC,IAAAA,EAAE,EAAE;AAFA,GAHc;AAOpBC,EAAAA,WAAW,EAAE;AAPO,CAAtB;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,aAAT,EAAwBS,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,YAAL;AACE,aAAO;AACLO,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,IAAI,EAAEM,MAAM,CAACN,IAHR;AAILG,QAAAA,WAAW,EAAE;AAJR,OAAP;;AAMF,SAAKX,SAAL;AACEgB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAO;AACLV,QAAAA,QAAQ,EAAE,KADL;AAELC,QAAAA,IAAI,EAAE,EAFD;AAGLG,QAAAA,WAAW,EAAE;AAHR,OAAP;;AAKF,SAAKV,eAAL;AACE,+BACKY,KADL;AAEEL,QAAAA,IAAI,EAAEM,MAAM,CAACN,IAFf;AAGEG,QAAAA,WAAW,EAAE;AAHf;;AAMF,SAAKR,OAAL;AACE,aAAO;AACLG,QAAAA,OAAO,EAAE;AADJ,OAAP;AAGF;AACA;AACA;;AACA;AACE,aAAOO,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,eAAeD,WAAf","sourcesContent":["import {\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  UPDATE_MESSAGES,\n  REGISTER,\n  LOADING\n} from \"../actions/actions\";\nimport { CANCEL } from \"redux-saga\";\n\nconst INITIAL_STATE = {\n  loading: false,\n  isLogged: false,\n  data: {\n    name: \"\",\n    id: \"\"\n  },\n  loginStatus: \"\"\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        loading: false,\n        isLogged: true,\n        data: action.data,\n        loginStatus: \"success\"\n      };\n    case AUTH_FAIL:\n      console.log(\"Auth_fai\");\n      return {\n        isLogged: false,\n        data: {},\n        loginStatus: \"error\"\n      };\n    case UPDATE_MESSAGES:\n      return {\n        ...state,\n        data: action.data,\n        loginStatus: \"success\"\n      };\n\n    case LOADING:\n      return {\n        loading: true\n      };\n    // case REGISTERED:\n    //   console.log(\"Registered success\");\n    //   break;\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}