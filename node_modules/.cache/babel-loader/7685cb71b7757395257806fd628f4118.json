{"ast":null,"code":"import _slicedToArray from \"/home/codebrahma/Documents/Projects/messages/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codebrahma/Documents/Projects/messages/src/components/Login/Login.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Login.module.css\";\nimport { login, register } from \"../../actions/actions\";\n\nconst Login = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        toggle = _useState8[0],\n        setToggle = _useState8[1];\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setName(\"\");\n  };\n\n  return (// <form>\n    React.createElement(\"div\", {\n      className: classes.Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, !toggle ? React.createElement(React.Fragment, null, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Username :\"), React.createElement(\"input\", {\n      className: classes.text,\n      type: \"text\",\n      placeholder: \"Username\",\n      name: \"username\",\n      onChange: e => setName(e.target.value.trim()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })) : null, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Email Id :\"), React.createElement(\"input\", {\n      className: classes.text,\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: e => setEmail(e.target.value.trim()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Password :\"), React.createElement(\"input\", {\n      className: classes.text,\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: e => setPassword(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), toggle ? React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      onClick: () => props.authLogin(email, password),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"p\", {\n      className: classes.register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Not registered\", React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        cursor: \"pointer\",\n        margin: \"0 5px\"\n      },\n      onClick: () => {\n        setToggle(false);\n        reset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Create an account\"))) : React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      onClick: () => props.register(name, email, password),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"p\", {\n      className: classes.register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Already have an account\", React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        cursor: \"pointer\",\n        margin: \"0 5px\"\n      },\n      onClick: () => setToggle(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Login here\")))) // </form>\n\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password) => dispatch(login(email, password)),\n  register: (name, email, password) => dispatch(register(name, email, password))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/codebrahma/Documents/Projects/messages/src/components/Login/Login.js"],"names":["React","useState","connect","classes","login","register","Login","props","email","setEmail","password","setPassword","name","setName","toggle","setToggle","reset","text","e","target","value","trim","authLogin","fontWeight","cursor","margin","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Login.module.css\";\nimport { login, register } from \"../../actions/actions\";\nconst Login = props => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [toggle, setToggle] = useState(true);\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setName(\"\");\n  };\n  return (\n    // <form>\n    <div className={classes.Login}>\n      {!toggle ? (\n        <>\n          <label>Username :</label>\n          <input\n            className={classes.text}\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            onChange={e => setName(e.target.value.trim())}\n          />\n        </>\n      ) : null}\n      <label>Email Id :</label>\n      <input\n        className={classes.text}\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"Email\"\n        onChange={e => setEmail(e.target.value.trim())}\n      />\n      <label>Password :</label>\n      <input\n        className={classes.text}\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        onChange={e => setPassword(e.target.value)}\n      />\n      {toggle ? (\n        <>\n          <button onClick={() => props.authLogin(email, password)}>\n            Login\n          </button>\n          <p className={classes.register}>\n            Not registered\n            <span\n              style={{ fontWeight: \"bold\", cursor: \"pointer\", margin: \"0 5px\" }}\n              onClick={() => {\n                setToggle(false);\n                reset();\n              }}\n            >\n              Create an account\n            </span>\n          </p>\n        </>\n      ) : (\n        <>\n          <button onClick={() => props.register(name, email, password)}>\n            Register\n          </button>\n          <p className={classes.register}>\n            Already have an account\n            <span\n              style={{ fontWeight: \"bold\", cursor: \"pointer\", margin: \"0 5px\" }}\n              onClick={() => setToggle(true)}\n            >\n              Login here\n            </span>\n          </p>\n        </>\n      )}\n    </div>\n    // </form>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password) => dispatch(login(email, password)),\n  register: (name, email, password) => dispatch(register(name, email, password))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}