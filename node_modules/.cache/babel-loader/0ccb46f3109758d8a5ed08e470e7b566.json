{"ast":null,"code":"import _defineProperty from \"/home/codebrahma/Documents/Projects/messages/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/codebrahma/Documents/Projects/messages/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codebrahma/Documents/Projects/messages/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Details from \"./components/Details/Details\";\nimport Chat from \"./components/Chat/Chat\";\nimport chatIcon from \"./assets/chatBubble.svg\";\nimport closeIcon from \"./assets/close1.png\";\nimport { connect } from \"react-redux\";\nimport Login from \"./components/Login/Login\";\nimport \"./App.css\";\n\nfunction App(props) {\n  let _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayChat = _useState2[0],\n      setToggle = _useState2[1];\n\n  const toggleChat = e => {\n    setToggle(prevState => !prevState);\n  };\n\n  let style;\n\n  if (displayChat) {\n    style = {\n      opacity: 1,\n      transition: \"all .2s ease\",\n      transform: \"rotate(-45deg)\"\n    };\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.isLogged ? React.createElement(Details, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }) : React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Chat, {\n    show: displayChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Icon\",\n    onClick: e => toggleChat(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, displayChat ? React.createElement(\"img\", {\n    className: \"closeIcon\",\n    style: _objectSpread({}, style, {\n      height: \"25px\",\n      width: \"25px\",\n      transform: \"rotate(-20deg)\"\n    }),\n    src: closeIcon,\n    alt: \"Chat Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: chatIcon,\n    style: style,\n    alt: \"Chat Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = state => ({\n  isLogged: state.isLogged,\n  loginStatus: state.loginStatus\n});\n\nexport default connect(mapStateToProps, null)(App);","map":{"version":3,"sources":["/home/codebrahma/Documents/Projects/messages/src/App.js"],"names":["React","useState","Details","Chat","closeIcon","connect","Login","App","props","displayChat","setToggle","toggleChat","e","prevState","style","opacity","transition","transform","isLogged","height","width","chatIcon","mapStateToProps","state","loginStatus"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA,kBACaP,QAAQ,CAAC,IAAD,CADrB;AAAA;AAAA,MACbQ,WADa;AAAA,MACAC,SADA;;AAGlB,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACtBF,IAAAA,SAAS,CAACG,SAAS,IAAI,CAACA,SAAf,CAAT;AACD,GAFD;;AAIA,MAAIC,KAAJ;;AACA,MAAIL,WAAJ,EAAiB;AACfK,IAAAA,KAAK,GAAG;AACNC,MAAAA,OAAO,EAAE,CADH;AAENC,MAAAA,UAAU,EAAE,cAFN;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAAR;AAKD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACU,QAAN,GAAiB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GAA+B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlC,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAET,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAEG,CAAC,IAAID,UAAU,CAACC,CAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WAAW,GACV;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,KAAK,oBACAK,KADA;AAEHK,MAAAA,MAAM,EAAE,MAFL;AAGHC,MAAAA,KAAK,EAAE,MAHJ;AAIHH,MAAAA,SAAS,EAAE;AAJR,MAFP;AAQE,IAAA,GAAG,EAAEb,SARP;AASE,IAAA,GAAG,EAAC,WATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAaV;AAAK,IAAA,GAAG,EAAEiB,QAAV;AAAoB,IAAA,KAAK,EAAEP,KAA3B;AAAkC,IAAA,GAAG,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CAHF,CADF;AAuBD;;AACD,MAAMQ,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,QAAQ,EAAEK,KAAK,CAACL,QADgB;AAEhCM,EAAAA,WAAW,EAAED,KAAK,CAACC;AAFa,CAAL,CAA7B;;AAKA,eAAenB,OAAO,CACpBiB,eADoB,EAEpB,IAFoB,CAAP,CAGbf,GAHa,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Details from \"./components/Details/Details\";\nimport Chat from \"./components/Chat/Chat\";\nimport chatIcon from \"./assets/chatBubble.svg\";\nimport closeIcon from \"./assets/close1.png\";\nimport { connect } from \"react-redux\";\nimport Login from \"./components/Login/Login\";\nimport \"./App.css\";\n\nfunction App(props) {\n  let [displayChat, setToggle] = useState(true);\n\n  const toggleChat = e => {\n    setToggle(prevState => !prevState);\n  };\n\n  let style;\n  if (displayChat) {\n    style = {\n      opacity: 1,\n      transition: \"all .2s ease\",\n      transform: \"rotate(-45deg)\"\n    };\n  }\n  return (\n    <div className=\"App\">\n      {props.isLogged ? <Details /> : <Login />}\n      <Chat show={displayChat} />\n      <div className=\"Icon\" onClick={e => toggleChat(e)}>\n        {displayChat ? (\n          <img\n            className=\"closeIcon\"\n            style={{\n              ...style,\n              height: \"25px\",\n              width: \"25px\",\n              transform: \"rotate(-20deg)\"\n            }}\n            src={closeIcon}\n            alt=\"Chat Icon\"\n          />\n        ) : (\n          <img src={chatIcon} style={style} alt=\"Chat Icon\" />\n        )}\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  isLogged: state.isLogged,\n  loginStatus: state.loginStatus\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);\n"]},"metadata":{},"sourceType":"module"}