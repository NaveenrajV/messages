{"ast":null,"code":"import _slicedToArray from \"/home/codebrahma/Documents/live/messages/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codebrahma/Documents/live/messages/src/components/Login/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, register, AUTH_SUCCESS } from \"../../actions/actions\";\nimport Spinner from \"./Spinner\";\nimport classes from \"./Login.module.css\";\nimport emailIcon from \"../../assets/email.svg\";\nimport passwordIcon from \"../../assets/lock.svg\";\nimport userIcon from \"../../assets/user.svg\";\n\nconst Login = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isLogin = _useState8[0],\n        setIsLogin = _useState8[1];\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setName(\"\");\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (isLogin) {\n      props.authLogin(email, password);\n    } else {\n      const regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n      const pwd = document.querySelector(\"#password\").value;\n\n      if (regex.test(pwd)) {\n        props.register(name, email, password);\n        setTimeout(() => {\n          setIsLogin(true);\n          reset();\n        }, 2000);\n      } else {\n        document.querySelector(\".password\").style.display = \"block\";\n      }\n    }\n  };\n  /*eslint-disable */\n\n\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\")) {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      props.logged(data);\n    }\n  }, []);\n  /*eslint-enable */\n\n  return props.loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.Login,\n    onSubmit: event => formSubmitHandler(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, isLogin ? \"LOGIN\" : \"REGISTER\"), isLogin ? null : React.createElement(\"div\", {\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    autoFocus: true,\n    autoComplete: \"off\",\n    type: \"text\",\n    className: classes.input,\n    placeholder: \"Username\",\n    name: \"username\",\n    value: name,\n    onChange: e => setName(e.target.value.trim()),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: userIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: classes.input,\n    autoFocus: true,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value.trim()),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: emailIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: classes.input,\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: passwordIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))), isLogin ? null : React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: [classes.error, \"password\"].join(\" \"),\n    style: {\n      fontSize: \"12px\",\n      fontWeight: \"bold\",\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Password must contain atleast one symbol,number,char\")), isLogin ? React.createElement(React.Fragment, null, props.loginStatus === \"error\" ? React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Invalid credentials\")) : null, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"p\", {\n    className: classes.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Not registered ?\", React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      cursor: \"pointer\",\n      margin: \"0 5px\"\n    },\n    onClick: () => {\n      setIsLogin(false);\n      reset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Create an account\"))) : React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"p\", {\n    className: classes.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Already have an account?\", React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      cursor: \"pointer\",\n      margin: \"0 5px\"\n    },\n    onClick: () => {\n      setIsLogin(true);\n      reset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Login here\")))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password) => dispatch(login(email, password)),\n  register: (name, email, password) => dispatch(register(name, email, password)),\n  logged: data => dispatch({\n    type: AUTH_SUCCESS,\n    data: data\n  })\n});\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  loginStatus: state.loginStatus\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/codebrahma/Documents/live/messages/src/components/Login/Login.js"],"names":["React","useState","useEffect","connect","login","register","AUTH_SUCCESS","Spinner","classes","Login","props","email","setEmail","password","setPassword","name","setName","isLogin","setIsLogin","reset","formSubmitHandler","event","preventDefault","authLogin","regex","pwd","document","querySelector","value","test","setTimeout","style","display","localStorage","getItem","data","JSON","parse","logged","loading","page","title","text","input","e","target","trim","icon","userIcon","emailIcon","passwordIcon","error","join","fontSize","fontWeight","loginStatus","cursor","margin","mapDispatchToProps","dispatch","type","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, register, AUTH_SUCCESS } from \"../../actions/actions\";\nimport Spinner from \"./Spinner\";\nimport classes from \"./Login.module.css\";\nimport emailIcon from \"../../assets/email.svg\";\nimport passwordIcon from \"../../assets/lock.svg\";\nimport userIcon from \"../../assets/user.svg\";\n\nconst Login = props => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setName(\"\");\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (isLogin) {\n      props.authLogin(email, password);\n    } else {\n      const regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n      const pwd = document.querySelector(\"#password\").value;\n      if (regex.test(pwd)) {\n        props.register(name, email, password);\n        setTimeout(() => {\n          setIsLogin(true);\n          reset();\n        }, 2000);\n      } else {\n        document.querySelector(\".password\").style.display = \"block\";\n      }\n    }\n  };\n  /*eslint-disable */\n\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\")) {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      props.logged(data);\n    }\n  }, []);\n\n  /*eslint-enable */\n\n  return props.loading ? (\n    <Spinner />\n  ) : (\n    <div className={classes.page}>\n      <form\n        className={classes.Login}\n        onSubmit={event => formSubmitHandler(event)}\n      >\n        <div className={classes.title}>{isLogin ? \"LOGIN\" : \"REGISTER\"}</div>\n        {isLogin ? null : (\n          <div className={classes.text}>\n            <input\n              autoFocus={true}\n              autoComplete=\"off\"\n              type=\"text\"\n              className={classes.input}\n              placeholder=\"Username\"\n              name=\"username\"\n              value={name}\n              onChange={e => setName(e.target.value.trim())}\n              required\n            />\n            <div className={classes.icon}>\n              <img src={userIcon} alt=\"\" />\n            </div>\n          </div>\n        )}\n        <div className={classes.text}>\n          <input\n            className={classes.input}\n            autoFocus={true}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={e => setEmail(e.target.value.trim())}\n            required\n          />\n          <div className={classes.icon}>\n            <img src={emailIcon} alt=\"\" />\n          </div>\n        </div>\n        <div className={classes.text}>\n          <input\n            className={classes.input}\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={e => setPassword(e.target.value)}\n            required\n          />\n          <div className={classes.icon}>\n            <img src={passwordIcon} alt=\"\" />\n          </div>\n        </div>\n        {isLogin ? null : (\n          <center>\n            <div\n              className={[classes.error, \"password\"].join(\" \")}\n              style={{ fontSize: \"12px\", fontWeight: \"bold\", display: \"none\" }}\n            >\n              Password must contain atleast one symbol,number,char\n            </div>\n          </center>\n        )}\n\n        {isLogin ? (\n          <>\n            {props.loginStatus === \"error\" ? (\n              <center>\n                <div className={classes.error}>Invalid credentials</div>\n              </center>\n            ) : null}\n            <button>Login</button>\n            <p className={classes.register}>\n              Not registered ?\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                  cursor: \"pointer\",\n                  margin: \"0 5px\"\n                }}\n                onClick={() => {\n                  setIsLogin(false);\n                  reset();\n                }}\n              >\n                Create an account\n              </span>\n            </p>\n          </>\n        ) : (\n          <>\n            <button>Register</button>\n            <p className={classes.register}>\n              Already have an account?\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                  cursor: \"pointer\",\n                  margin: \"0 5px\"\n                }}\n                onClick={() => {\n                  setIsLogin(true);\n                  reset();\n                }}\n              >\n                Login here\n              </span>\n            </p>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password) => dispatch(login(email, password)),\n  register: (name, email, password) =>\n    dispatch(register(name, email, password)),\n  logged: data => dispatch({ type: AUTH_SUCCESS, data: data })\n});\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  loginStatus: state.loginStatus\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}