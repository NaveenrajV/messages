{"ast":null,"code":"import _slicedToArray from \"/home/codebrahma/Documents/live/messages/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codebrahma/Documents/live/messages/src/components/signup/signup.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { register, AUTH_SUCCESS } from \"../../actions/actions\";\nimport Spinner from \"../Spinner/Spinner\";\nimport classes from \"./signup.module.css\";\nimport emailIcon from \"../../assets/email.svg\";\nimport passwordIcon from \"../../assets/lock.svg\";\nimport userIcon from \"../../assets/user.svg\";\nimport { Link } from \"react-router-dom\";\n\nconst Signup = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    const regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n    const pwd = document.querySelector(\"#password\").value;\n\n    if (regex.test(pwd)) {\n      const history = props.history;\n      props.register(name, email, password, history);\n    } else {\n      document.querySelector(\".password\").style.display = \"block\";\n    }\n  };\n  /*eslint-disable */\n\n\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\")) {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      props.logged(data);\n    }\n  }, []);\n  /*eslint-enable */\n\n  return props.loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.Login,\n    onSubmit: event => formSubmitHandler(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"REGISTER\"), React.createElement(\"div\", {\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    autoFocus: true,\n    autoComplete: \"off\",\n    type: \"text\",\n    className: classes.input,\n    placeholder: \"Username\",\n    name: \"username\",\n    value: name,\n    onChange: e => setName(e.target.value.trim()),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: userIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: classes.input,\n    autoFocus: true,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value.trim()),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: emailIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: classes.input,\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: passwordIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: [classes.error, \"password\"].join(\" \"),\n    style: {\n      fontSize: \"12px\",\n      fontWeight: \"bold\",\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Password must contain atleast one symbol,number,char\")), React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"p\", {\n    className: classes.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Already have an account?\", React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      cursor: \"pointer\",\n      margin: \"0 5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Login here\"))))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  register: (name, email, password, history) => dispatch(register(name, email, password, history)),\n  logged: data => dispatch({\n    type: AUTH_SUCCESS,\n    data: data\n  })\n});\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  loginStatus: state.loginStatus\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/home/codebrahma/Documents/live/messages/src/components/signup/signup.js"],"names":["React","useState","useEffect","connect","register","AUTH_SUCCESS","Spinner","classes","Link","Signup","props","email","setEmail","password","setPassword","name","setName","formSubmitHandler","event","preventDefault","regex","pwd","document","querySelector","value","test","history","style","display","localStorage","getItem","data","JSON","parse","logged","loading","page","Login","title","text","input","e","target","trim","icon","userIcon","emailIcon","passwordIcon","error","join","fontSize","fontWeight","cursor","margin","mapDispatchToProps","dispatch","type","mapStateToProps","state","loginStatus"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;;AAIA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,oBACIT,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,QACfU,KADe;AAAA,QACRC,QADQ;;AAAA,qBAEUX,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,QAEfY,QAFe;AAAA,QAELC,WAFK;;AAAA,qBAGEb,QAAQ,CAAC,EAAD,CAHV;AAAA;AAAA,QAGfc,IAHe;AAAA,QAGTC,OAHS;;AAKtB,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,KAAK,GAAG,wDAAd;AACA,UAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAAhD;;AACA,QAAIJ,KAAK,CAACK,IAAN,CAAWJ,GAAX,CAAJ,EAAqB;AACnB,YAAMK,OAAO,GAAGhB,KAAK,CAACgB,OAAtB;AACAhB,MAAAA,KAAK,CAACN,QAAN,CAAeW,IAAf,EAAqBJ,KAArB,EAA4BE,QAA5B,EAAsCa,OAAtC;AACD,KAHD,MAGO;AACLJ,MAAAA,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCI,KAApC,CAA0CC,OAA1C,GAAoD,OAApD;AACD;AACF,GAVD;AAWA;;;AAEA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2B,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AACpC,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACApB,MAAAA,KAAK,CAACwB,MAAN,CAAaH,IAAb;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOA;;AAEA,SAAOrB,KAAK,CAACyB,OAAN,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KADrB;AAEE,IAAA,QAAQ,EAAEnB,KAAK,IAAID,iBAAiB,CAACC,KAAD,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAEX,OAAO,CAAC+B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAME;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAACgC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,YAAY,EAAC,KAFf;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,SAAS,EAAEhC,OAAO,CAACiC,KAJrB;AAKE,IAAA,WAAW,EAAC,UALd;AAME,IAAA,IAAI,EAAC,UANP;AAOE,IAAA,KAAK,EAAEzB,IAPT;AAQE,IAAA,QAAQ,EAAE0B,CAAC,IAAIzB,OAAO,CAACyB,CAAC,CAACC,MAAF,CAASlB,KAAT,CAAemB,IAAf,EAAD,CARxB;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE;AAAK,IAAA,SAAS,EAAEpC,OAAO,CAACqC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,QAAV;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CANF,EAsBE;AAAK,IAAA,SAAS,EAAEtC,OAAO,CAACgC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEhC,OAAO,CAACiC,KADrB;AAEE,IAAA,SAAS,EAAE,IAFb;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,WAAW,EAAC,OALd;AAME,IAAA,KAAK,EAAE7B,KANT;AAOE,IAAA,QAAQ,EAAE8B,CAAC,IAAI7B,QAAQ,CAAC6B,CAAC,CAACC,MAAF,CAASlB,KAAT,CAAemB,IAAf,EAAD,CAPzB;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE;AAAK,IAAA,SAAS,EAAEpC,OAAO,CAACqC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEE,SAAV;AAAqB,IAAA,GAAG,EAAC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CAtBF,EAqCE;AAAK,IAAA,SAAS,EAAEvC,OAAO,CAACgC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEhC,OAAO,CAACiC,KADrB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,EAAE,EAAC,UAJL;AAKE,IAAA,KAAK,EAAE3B,QALT;AAME,IAAA,WAAW,EAAC,UANd;AAOE,IAAA,QAAQ,EAAE4B,CAAC,IAAI3B,WAAW,CAAC2B,CAAC,CAACC,MAAF,CAASlB,KAAV,CAP5B;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACqC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEG,YAAV;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CArCF,EAqDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAE,CAACxC,OAAO,CAACyC,KAAT,EAAgB,UAAhB,EAA4BC,IAA5B,CAAiC,GAAjC,CADb;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,UAAU,EAAE,MAAhC;AAAwCvB,MAAAA,OAAO,EAAE;AAAjD,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADF,CArDF,EA8DE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,IAAA,SAAS,EAAErB,OAAO,CAACH,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AACL+C,MAAAA,UAAU,EAAE,MADP;AAELC,MAAAA,MAAM,EAAE,SAFH;AAGLC,MAAAA,MAAM,EAAE;AAHH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAFF,CAFF,CA9DF,CADF,CAHF;AAsFD,CAjHD;;AAmHA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnD,EAAAA,QAAQ,EAAE,CAACW,IAAD,EAAOJ,KAAP,EAAcE,QAAd,EAAwBa,OAAxB,KACR6B,QAAQ,CAACnD,QAAQ,CAACW,IAAD,EAAOJ,KAAP,EAAcE,QAAd,EAAwBa,OAAxB,CAAT,CAF4B;AAGtCQ,EAAAA,MAAM,EAAEH,IAAI,IAAIwB,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEnD,YAAR;AAAsB0B,IAAAA,IAAI,EAAEA;AAA5B,GAAD;AAHc,CAAL,CAAnC;;AAKA,MAAM0B,eAAe,GAAGC,KAAK,KAAK;AAChCvB,EAAAA,OAAO,EAAEuB,KAAK,CAACvB,OADiB;AAEhCwB,EAAAA,WAAW,EAAED,KAAK,CAACC;AAFa,CAAL,CAA7B;;AAKA,eAAexD,OAAO,CACpBsD,eADoB,EAEpBH,kBAFoB,CAAP,CAGb7C,MAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { register, AUTH_SUCCESS } from \"../../actions/actions\";\nimport Spinner from \"../Spinner/Spinner\";\nimport classes from \"./signup.module.css\";\nimport emailIcon from \"../../assets/email.svg\";\nimport passwordIcon from \"../../assets/lock.svg\";\nimport userIcon from \"../../assets/user.svg\";\nimport { Link } from \"react-router-dom\";\n\nconst Signup = props => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    const regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n    const pwd = document.querySelector(\"#password\").value;\n    if (regex.test(pwd)) {\n      const history = props.history;\n      props.register(name, email, password, history);\n    } else {\n      document.querySelector(\".password\").style.display = \"block\";\n    }\n  };\n  /*eslint-disable */\n\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\")) {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      props.logged(data);\n    }\n  }, []);\n\n  /*eslint-enable */\n\n  return props.loading ? (\n    <Spinner />\n  ) : (\n    <div className={classes.page}>\n      <form\n        className={classes.Login}\n        onSubmit={event => formSubmitHandler(event)}\n      >\n        <div className={classes.title}>REGISTER</div>\n\n        <div className={classes.text}>\n          <input\n            autoFocus={true}\n            autoComplete=\"off\"\n            type=\"text\"\n            className={classes.input}\n            placeholder=\"Username\"\n            name=\"username\"\n            value={name}\n            onChange={e => setName(e.target.value.trim())}\n            required\n          />\n          <div className={classes.icon}>\n            <img src={userIcon} alt=\"\" />\n          </div>\n        </div>\n        <div className={classes.text}>\n          <input\n            className={classes.input}\n            autoFocus={true}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={e => setEmail(e.target.value.trim())}\n            required\n          />\n          <div className={classes.icon}>\n            <img src={emailIcon} alt=\"\" />\n          </div>\n        </div>\n        <div className={classes.text}>\n          <input\n            className={classes.input}\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={e => setPassword(e.target.value)}\n            required\n          />\n          <div className={classes.icon}>\n            <img src={passwordIcon} alt=\"\" />\n          </div>\n        </div>\n\n        <center>\n          <div\n            className={[classes.error, \"password\"].join(\" \")}\n            style={{ fontSize: \"12px\", fontWeight: \"bold\", display: \"none\" }}\n          >\n            Password must contain atleast one symbol,number,char\n          </div>\n        </center>\n\n        <>\n          <button>Register</button>\n          <p className={classes.register}>\n            Already have an account?\n            <Link to=\"/\">\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                  cursor: \"pointer\",\n                  margin: \"0 5px\"\n                }}\n              >\n                Login here\n              </span>\n            </Link>\n          </p>\n        </>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  register: (name, email, password, history) =>\n    dispatch(register(name, email, password, history)),\n  logged: data => dispatch({ type: AUTH_SUCCESS, data: data })\n});\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  loginStatus: state.loginStatus\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n"]},"metadata":{},"sourceType":"module"}