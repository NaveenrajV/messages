{"ast":null,"code":"import _slicedToArray from \"/home/codebrahma/Documents/live/messages/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codebrahma/Documents/live/messages/src/components/Login/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, register, AUTH_SUCCESS } from \"../../actions/actions\";\nimport Spinner from \"../Spinner/Spinner\";\nimport classes from \"./Login.module.css\";\nimport emailIcon from \"../../assets/email.svg\";\nimport passwordIcon from \"../../assets/lock.svg\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    const history = props.history;\n    props.authLogin(email, password, history);\n  };\n  /*eslint-disable */\n\n\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\")) {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      props.logged(data);\n    }\n  }, []);\n  /*eslint-enable */\n\n  return props.loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.Login,\n    onSubmit: event => formSubmitHandler(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" LOGIN\"), React.createElement(\"div\", {\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: classes.input,\n    autoFocus: true,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value.trim()),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: emailIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: classes.input,\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: passwordIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(React.Fragment, null, props.loginStatus === \"error\" ? React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Invalid credentials\")) : null, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"p\", {\n    className: classes.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Not registered ?\", React.createElement(Link, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      cursor: \"pointer\",\n      margin: \"0 5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Create an account\"))))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password, history) => dispatch(login(email, password, history)),\n  register: (name, email, password) => dispatch(register(name, email, password)),\n  logged: data => dispatch({\n    type: AUTH_SUCCESS,\n    data: data\n  })\n});\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  loginStatus: state.loginStatus,\n  isLogged: state.isLogged\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/codebrahma/Documents/live/messages/src/components/Login/Login.js"],"names":["React","useState","useEffect","connect","login","register","AUTH_SUCCESS","Spinner","classes","Link","Login","props","email","setEmail","password","setPassword","formSubmitHandler","event","preventDefault","history","authLogin","localStorage","getItem","data","JSON","parse","logged","loading","page","title","text","input","e","target","value","trim","icon","emailIcon","passwordIcon","loginStatus","error","fontWeight","cursor","margin","mapDispatchToProps","dispatch","name","type","mapStateToProps","state","isLogged"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, register, AUTH_SUCCESS } from \"../../actions/actions\";\nimport Spinner from \"../Spinner/Spinner\";\nimport classes from \"./Login.module.css\";\nimport emailIcon from \"../../assets/email.svg\";\nimport passwordIcon from \"../../assets/lock.svg\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = props => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    const history = props.history;\n    props.authLogin(email, password, history);\n  };\n  /*eslint-disable */\n\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\")) {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      props.logged(data);\n    }\n  }, []);\n\n  /*eslint-enable */\n  return props.loading ? (\n    <Spinner />\n  ) : (\n    <div className={classes.page}>\n      <form\n        className={classes.Login}\n        onSubmit={event => formSubmitHandler(event)}\n      >\n        <div className={classes.title}> LOGIN</div>\n        <div className={classes.text}>\n          <input\n            className={classes.input}\n            autoFocus={true}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={e => setEmail(e.target.value.trim())}\n            required\n          />\n          <div className={classes.icon}>\n            <img src={emailIcon} alt=\"\" />\n          </div>\n        </div>\n        <div className={classes.text}>\n          <input\n            className={classes.input}\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={e => setPassword(e.target.value)}\n            required\n          />\n          <div className={classes.icon}>\n            <img src={passwordIcon} alt=\"\" />\n          </div>\n        </div>\n\n        <>\n          {props.loginStatus === \"error\" ? (\n            <center>\n              <div className={classes.error}>Invalid credentials</div>\n            </center>\n          ) : null}\n          <button>Login</button>\n          <p className={classes.register}>\n            Not registered ?\n            <Link to=\"/signup\">\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                  cursor: \"pointer\",\n                  margin: \"0 5px\"\n                }}\n              >\n                Create an account\n              </span>\n            </Link>\n          </p>\n        </>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password, history) =>\n    dispatch(login(email, password, history)),\n  register: (name, email, password) =>\n    dispatch(register(name, email, password)),\n  logged: data => dispatch({ type: AUTH_SUCCESS, data: data })\n});\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  loginStatus: state.loginStatus,\n  isLogged: state.isLogged\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}