{"ast":null,"code":"import _slicedToArray from \"/home/codebrahma/Documents/Projects/messages/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codebrahma/Documents/Projects/messages/src/components/Login/Login.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Login.module.css\";\nimport { login, register } from \"../../actions/actions\";\n\nconst Login = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isLogin = _useState8[0],\n        setIsLogin = _useState8[1];\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setName(\"\");\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      isLogin ? props.authLogin(email, password) : props.register(name, email, password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, isLogin ? null : React.createElement(React.Fragment, null, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Username :\"), React.createElement(\"input\", {\n    className: classes.text,\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    value: name,\n    onChange: e => setName(e.target.value.trim()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Email Id :\"), React.createElement(\"input\", {\n    className: classes.text,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value.trim()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Password :\"), React.createElement(\"input\", {\n    className: classes.text,\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), isLogin ? React.createElement(React.Fragment, null, props.loginStatus !== \"success\" ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Invalid credentials\") : null, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"p\", {\n    className: classes.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Not registered\", React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      cursor: \"pointer\",\n      margin: \"0 5px\"\n    },\n    onClick: () => {\n      setIsLogin(false);\n      reset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Create an account\"))) : React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"p\", {\n    className: classes.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Already have an account?\", React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      cursor: \"pointer\",\n      margin: \"0 5px\"\n    },\n    onClick: () => {\n      setIsLogin(true);\n      reset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Login here\")))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password) => dispatch(login(email, password)),\n  register: (name, email, password) => dispatch(register(name, email, password))\n});\n\nconst mapStateToProps = state => ({\n  loginStatus: state.loginStatus\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/codebrahma/Documents/Projects/messages/src/components/Login/Login.js"],"names":["React","useState","connect","classes","login","register","Login","props","email","setEmail","password","setPassword","name","setName","isLogin","setIsLogin","reset","event","preventDefault","authLogin","text","e","target","value","trim","loginStatus","fontWeight","cursor","margin","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Login.module.css\";\nimport { login, register } from \"../../actions/actions\";\n\nconst Login = props => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setName(\"\");\n  };\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault();\n        isLogin\n          ? props.authLogin(email, password)\n          : props.register(name, email, password);\n      }}\n    >\n      <div className={classes.Login}>\n        {isLogin ? null : (\n          <>\n            <label>Username :</label>\n            <input\n              className={classes.text}\n              type=\"text\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={name}\n              onChange={e => setName(e.target.value.trim())}\n            />\n          </>\n        )}\n        <label>Email Id :</label>\n        <input\n          className={classes.text}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={e => setEmail(e.target.value.trim())}\n        />\n        <label>Password :</label>\n        <input\n          className={classes.text}\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={e => setPassword(e.target.value)}\n        />\n        {isLogin ? (\n          <>\n            {props.loginStatus !== \"success\" ? (\n              <span>Invalid credentials</span>\n            ) : null}\n            <button>Login</button>\n            <p className={classes.register}>\n              Not registered\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                  cursor: \"pointer\",\n                  margin: \"0 5px\"\n                }}\n                onClick={() => {\n                  setIsLogin(false);\n                  reset();\n                }}\n              >\n                Create an account\n              </span>\n            </p>\n          </>\n        ) : (\n          <>\n            <button>Register</button>\n            <p className={classes.register}>\n              Already have an account?\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                  cursor: \"pointer\",\n                  margin: \"0 5px\"\n                }}\n                onClick={() => {\n                  setIsLogin(true);\n                  reset();\n                }}\n              >\n                Login here\n              </span>\n            </p>\n          </>\n        )}\n      </div>\n    </form>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password) => dispatch(login(email, password)),\n  register: (name, email, password) => dispatch(register(name, email, password))\n});\nconst mapStateToProps = state => ({\n  loginStatus: state.loginStatus\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}