{"ast":null,"code":"import _slicedToArray from \"/home/codebrahma/Documents/Projects/messages/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codebrahma/Documents/Projects/messages/src/components/Login/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Login.module.css\";\nimport { login, register, AUTH_SUCCESS } from \"../../actions/actions\";\nimport \"./spinner.css\";\n\nconst Login = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isLogin = _useState8[0],\n        setIsLogin = _useState8[1];\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setName(\"\");\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\")) {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      props.logged(data);\n    }\n  }, []);\n  return props.loading ? React.createElement(\"div\", {\n    className: classes.loader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sk-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sk-circle1 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle2 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle3 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle4 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle5 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle6 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle7 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle8 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle9 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle10 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle11 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sk-circle12 sk-child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.Login,\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (isLogin) {\n        props.authLogin(email, password);\n      } else {\n        const regex = \"/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\";\n        const pwd = document.getElementById(\"password\").value;\n        console.log(pwd);\n        console.log(regex.test(pwd));\n        props.register(name, email, password);\n        setIsLogin(true);\n        reset();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, isLogin ? null : React.createElement(React.Fragment, null, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Username \"), React.createElement(\"input\", {\n    className: classes.text,\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    value: name,\n    onChange: e => setName(e.target.value.trim()),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Email Id \"), React.createElement(\"input\", {\n    className: classes.text,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value.trim()),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Password \"), React.createElement(\"input\", {\n    className: classes.text,\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), isLogin ? null : React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.error,\n    style: {\n      fontSize: \"12px\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Password must contain atleast one symbol,number,char\")), isLogin ? React.createElement(React.Fragment, null, props.loginStatus === \"error\" ? React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Invalid credentials\")) : null, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"p\", {\n    className: classes.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Not registered ?\", React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      cursor: \"pointer\",\n      margin: \"0 5px\"\n    },\n    onClick: () => {\n      setIsLogin(false);\n      reset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Create an account\"))) : React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"p\", {\n    className: classes.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Already have an account?\", React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      cursor: \"pointer\",\n      margin: \"0 5px\"\n    },\n    onClick: () => {\n      setIsLogin(true);\n      reset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Login here\")))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password) => dispatch(login(email, password)),\n  register: (name, email, password) => dispatch(register(name, email, password)),\n  logged: data => dispatch({\n    type: AUTH_SUCCESS,\n    data: data\n  })\n});\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  loginStatus: state.loginStatus\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/codebrahma/Documents/Projects/messages/src/components/Login/Login.js"],"names":["React","useState","useEffect","connect","classes","login","register","AUTH_SUCCESS","Login","props","email","setEmail","password","setPassword","name","setName","isLogin","setIsLogin","reset","localStorage","getItem","data","JSON","parse","logged","loading","loader","event","preventDefault","authLogin","regex","pwd","document","getElementById","value","console","log","test","text","e","target","trim","error","fontSize","fontWeight","loginStatus","cursor","margin","mapDispatchToProps","dispatch","type","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Login.module.css\";\nimport { login, register, AUTH_SUCCESS } from \"../../actions/actions\";\nimport \"./spinner.css\";\n\nconst Login = props => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setName(\"\");\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\")) {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      props.logged(data);\n    }\n  }, []);\n\n  return props.loading ? (\n    <div className={classes.loader}>\n      <div className=\"sk-circle\">\n        <div className=\"sk-circle1 sk-child\"></div>\n        <div className=\"sk-circle2 sk-child\"></div>\n        <div className=\"sk-circle3 sk-child\"></div>\n        <div className=\"sk-circle4 sk-child\"></div>\n        <div className=\"sk-circle5 sk-child\"></div>\n        <div className=\"sk-circle6 sk-child\"></div>\n        <div className=\"sk-circle7 sk-child\"></div>\n        <div className=\"sk-circle8 sk-child\"></div>\n        <div className=\"sk-circle9 sk-child\"></div>\n        <div className=\"sk-circle10 sk-child\"></div>\n        <div className=\"sk-circle11 sk-child\"></div>\n        <div className=\"sk-circle12 sk-child\"></div>\n      </div>\n      {/* <Spinner name=\"circle\" /> */}\n    </div>\n  ) : (\n    <div>\n      <form\n        className={classes.Login}\n        onSubmit={event => {\n          event.preventDefault();\n          if (isLogin) {\n            props.authLogin(email, password);\n          } else {\n            const regex =\n              \"/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\";\n            const pwd = document.getElementById(\"password\").value;\n            console.log(pwd);\n            console.log(regex.test(pwd));\n            props.register(name, email, password);\n            setIsLogin(true);\n            reset();\n          }\n        }}\n      >\n        {isLogin ? null : (\n          <>\n            <label>Username </label>\n            <input\n              className={classes.text}\n              type=\"text\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={name}\n              onChange={e => setName(e.target.value.trim())}\n              required\n            />\n          </>\n        )}\n        <label>Email Id </label>\n        <input\n          className={classes.text}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={e => setEmail(e.target.value.trim())}\n          required\n        />\n        <label>Password </label>\n        <input\n          className={classes.text}\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={e => setPassword(e.target.value)}\n          required\n        />\n        {isLogin ? null : (\n          <center>\n            <div\n              className={classes.error}\n              style={{ fontSize: \"12px\", fontWeight: \"bold\" }}\n            >\n              Password must contain atleast one symbol,number,char\n            </div>\n          </center>\n        )}\n\n        {isLogin ? (\n          <>\n            {props.loginStatus === \"error\" ? (\n              <center>\n                <div className={classes.error}>Invalid credentials</div>\n              </center>\n            ) : null}\n            <button>Login</button>\n            <p className={classes.register}>\n              Not registered ?\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                  cursor: \"pointer\",\n                  margin: \"0 5px\"\n                }}\n                onClick={() => {\n                  setIsLogin(false);\n                  reset();\n                }}\n              >\n                Create an account\n              </span>\n            </p>\n          </>\n        ) : (\n          <>\n            <button>Register</button>\n            <p className={classes.register}>\n              Already have an account?\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                  cursor: \"pointer\",\n                  margin: \"0 5px\"\n                }}\n                onClick={() => {\n                  setIsLogin(true);\n                  reset();\n                }}\n              >\n                Login here\n              </span>\n            </p>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authLogin: (email, password) => dispatch(login(email, password)),\n  register: (name, email, password) =>\n    dispatch(register(name, email, password)),\n  logged: data => dispatch({ type: AUTH_SUCCESS, data: data })\n});\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  loginStatus: state.loginStatus\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}