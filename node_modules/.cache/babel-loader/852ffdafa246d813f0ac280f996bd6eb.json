{"ast":null,"code":"import _defineProperty from \"/home/codebrahma/Documents/Projects/messages/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, delay } from \"redux-saga/effects\";\nimport { AUTH_FAIL, AUTH_SUCCESS, AUTH_VALIDATION, REGISTER } from \"../actions/actions\";\nexport function* register(action) {\n  yield delay(1000);\n  const _action$payload = action.payload,\n        name = _action$payload.name,\n        password = _action$payload.password;\n  console.log(\"Register details : \".concat(name, \",\").concat(password));\n}\nexport function* validateLogin(action) {\n  yield delay(1000);\n  const _action$payload2 = action.payload,\n        name = _action$payload2.name,\n        password = _action$payload2.password;\n  if (name === \"abc\" && password === \"123\") yield put(_objectSpread({}, action, {\n    type: AUTH_SUCCESS\n  }));else yield put(_objectSpread({}, action, {\n    type: AUTH_FAIL\n  }));\n}\nexport default function* rootSaga() {\n  yield takeLatest(AUTH_VALIDATION, validateLogin);\n  yield takeLatest(REGISTER, register);\n}","map":{"version":3,"sources":["/home/codebrahma/Documents/Projects/messages/src/sagas/sagas.js"],"names":["takeLatest","put","delay","AUTH_FAIL","AUTH_SUCCESS","AUTH_VALIDATION","REGISTER","register","action","payload","name","password","console","log","validateLogin","type","rootSaga"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,KAA1B,QAAuC,oBAAvC;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,QAJF,QAKO,oBALP;AAOA,OAAO,UAAUC,QAAV,CAAmBC,MAAnB,EAA2B;AAChC,QAAMN,KAAK,CAAC,IAAD,CAAX;AADgC,0BAELM,MAAM,CAACC,OAFF;AAAA,QAExBC,IAFwB,mBAExBA,IAFwB;AAAA,QAElBC,QAFkB,mBAElBA,QAFkB;AAGhCC,EAAAA,OAAO,CAACC,GAAR,8BAAkCH,IAAlC,cAA0CC,QAA1C;AACD;AAED,OAAO,UAAUG,aAAV,CAAwBN,MAAxB,EAAgC;AACrC,QAAMN,KAAK,CAAC,IAAD,CAAX;AADqC,2BAEVM,MAAM,CAACC,OAFG;AAAA,QAE7BC,IAF6B,oBAE7BA,IAF6B;AAAA,QAEvBC,QAFuB,oBAEvBA,QAFuB;AAGrC,MAAID,IAAI,KAAK,KAAT,IAAkBC,QAAQ,KAAK,KAAnC,EACE,MAAMV,GAAG,mBAAMO,MAAN;AAAcO,IAAAA,IAAI,EAAEX;AAApB,KAAT,CADF,KAEK,MAAMH,GAAG,mBAAMO,MAAN;AAAcO,IAAAA,IAAI,EAAEZ;AAApB,KAAT;AACN;AAED,eAAe,UAAUa,QAAV,GAAqB;AAClC,QAAMhB,UAAU,CAACK,eAAD,EAAkBS,aAAlB,CAAhB;AACA,QAAMd,UAAU,CAACM,QAAD,EAAWC,QAAX,CAAhB;AACD","sourcesContent":["import { takeLatest, put, delay } from \"redux-saga/effects\";\nimport {\n  AUTH_FAIL,\n  AUTH_SUCCESS,\n  AUTH_VALIDATION,\n  REGISTER\n} from \"../actions/actions\";\n\nexport function* register(action) {\n  yield delay(1000);\n  const { name, password } = action.payload;\n  console.log(`Register details : ${name},${password}`);\n}\n\nexport function* validateLogin(action) {\n  yield delay(1000);\n  const { name, password } = action.payload;\n  if (name === \"abc\" && password === \"123\")\n    yield put({ ...action, type: AUTH_SUCCESS });\n  else yield put({ ...action, type: AUTH_FAIL });\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(AUTH_VALIDATION, validateLogin);\n  yield takeLatest(REGISTER, register);\n}\n"]},"metadata":{},"sourceType":"module"}