{"ast":null,"code":"var _jsxFileName = \"/home/codebrahma/Documents/Projects/messages/src/components/Details/Details.js\";\nimport React, { useEffect } from \"react\";\nimport Detail from \"../Detail/Detail\";\nimport Login from \"../Login/Login\";\nimport firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/actions\";\nimport Logout from \"../../assets/logout.svg\";\nimport classes from \"./Details.module.css\";\n\nconst Details = props => {\n  let data,\n      keys,\n      list = [];\n  /*eslint-disable */\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (!user) {\n        localStorage.removeItem(\"data\");\n        localStorage.removeItem(\"isLogged\");\n        props.logout();\n      }\n    });\n  }, []);\n  /*eslint-enable */\n\n  if (props.data !== undefined) {\n    data = props.data;\n    keys = Object.keys(data);\n  }\n\n  if (props.isLogged) {\n    const loggedUser = \"dfgghghjgjh\";\n    list = keys.map(key => {\n      if (data[key][loggedUser] === undefined) return null;\n      return React.createElement(Detail, {\n        key: key,\n        id: key,\n        name: data[key][loggedUser].name,\n        message: data[key][loggedUser].message,\n        subject: data[key][loggedUser].subject,\n        email: data[key][loggedUser].email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    });\n    const check = list.filter(elem => elem);\n    console.log(\"map\" + check);\n  } else {\n    console.log(\"not logged\");\n    let users = Object.keys(keys);\n    list = users.map(key => {\n      return React.createElement(Detail, {\n        id: key,\n        name: data[key][users].name,\n        message: data[key][users].message,\n        subject: data[key][users].subject,\n        email: data[key][users].email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    });\n  }\n\n  if (list.length === 0) {\n    list = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"No data\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, console.log(list.length), props.isLogged ? React.createElement(React.Fragment, null, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Records\")), React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: Date.now(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    key: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    key: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"th\", {\n    key: \"subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Subject\"), React.createElement(\"th\", {\n    key: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Message\")), list)), React.createElement(\"div\", {\n    className: classes.logout,\n    onClick: () => firebase.auth().signOut(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Logout,\n    alt: \"Logout\",\n    title: \"Logout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })))) : React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  isLogged: state.isLogged || localStorage.getItem(\"isLogged\"),\n  data: state.data || localStorage.getItem(\"data\")\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(logout())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);","map":{"version":3,"sources":["/home/codebrahma/Documents/Projects/messages/src/components/Details/Details.js"],"names":["React","useEffect","Detail","Login","firebase","connect","logout","classes","Details","props","data","keys","list","auth","onAuthStateChanged","user","localStorage","removeItem","undefined","Object","isLogged","loggedUser","map","key","name","message","subject","email","check","filter","elem","console","log","users","length","table","Date","now","signOut","Logout","mapStateToProps","state","loading","getItem","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Detail from \"../Detail/Detail\";\nimport Login from \"../Login/Login\";\nimport firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/actions\";\nimport Logout from \"../../assets/logout.svg\";\nimport classes from \"./Details.module.css\";\n\nconst Details = props => {\n  let data,\n    keys,\n    list = [];\n\n  /*eslint-disable */\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (!user) {\n        localStorage.removeItem(\"data\");\n        localStorage.removeItem(\"isLogged\");\n        props.logout();\n      }\n    });\n  }, []);\n  /*eslint-enable */\n\n  if (props.data !== undefined) {\n    data = props.data;\n    keys = Object.keys(data);\n  }\n\n  if (props.isLogged) {\n    const loggedUser = \"dfgghghjgjh\";\n    list = keys.map(key => {\n      if (data[key][loggedUser] === undefined) return null;\n      return (\n        <Detail\n          key={key}\n          id={key}\n          name={data[key][loggedUser].name}\n          message={data[key][loggedUser].message}\n          subject={data[key][loggedUser].subject}\n          email={data[key][loggedUser].email}\n        />\n      );\n    });\n    const check = list.filter(elem => elem);\n    console.log(\"map\" + check);\n  } else {\n    console.log(\"not logged\");\n    let users = Object.keys(keys);\n    list = users.map(key => {\n      return (\n        <Detail\n          id={key}\n          name={data[key][users].name}\n          message={data[key][users].message}\n          subject={data[key][users].subject}\n          email={data[key][users].email}\n        />\n      );\n    });\n  }\n\n  if (list.length === 0) {\n    list = <p>No data</p>;\n  }\n  return (\n    <div>\n      {console.log(list.length)}\n      {props.isLogged ? (\n        <>\n          <center>\n            <h2>Records</h2>\n          </center>\n          <center>\n            <table className={classes.table}>\n              <tbody>\n                <tr key={Date.now()}>\n                  <th key=\"name\">Name</th>\n                  <th key=\"email\">Email</th>\n                  <th key=\"subject\">Subject</th>\n                  <th key=\"message\">Message</th>\n                </tr>\n                {list}\n              </tbody>\n            </table>\n            <div\n              className={classes.logout}\n              onClick={() => firebase.auth().signOut()}\n            >\n              <img src={Logout} alt=\"Logout\" title=\"Logout\" />\n            </div>\n          </center>\n        </>\n      ) : (\n        <Login />\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  isLogged: state.isLogged || localStorage.getItem(\"isLogged\"),\n  data: state.data || localStorage.getItem(\"data\")\n});\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(logout())\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Details);\n"]},"metadata":{},"sourceType":"module"}